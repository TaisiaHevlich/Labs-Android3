// Батьківський клас Фігура
open class Фігура {
    // Метод для обчислення площі (за замовчуванням повертає 0)
    open fun обчислитиПлощу(): Double {
        return 0.0
    }

    // Метод для обчислення периметра (за замовчуванням повертає 0)
    open fun обчислитиПериметр(): Double {
        return 0.0
    }
}

// Приклад успадкування для прямокутника
class Прямокутник(private val довжина: Double, private val ширина: Double) : Фігура() {
    override fun обчислитиПлощу(): Double {
        return довжина * ширина
    }

    override fun обчислитиПериметр(): Double {
        return 2 * (довжина + ширина)
    }
}

// Приклад успадкування для кола
class Коло(private val радіус: Double) : Фігура() {
    override fun обчислитиПлощу(): Double {
        return Math.PI * радіус * радіус
    }

    override fun обчислитиПериметр(): Double {
        return 2 * Math.PI * радіус
    }
}

// Приклад успадкування для трикутника
class Трикутник(private val a: Double, private val b: Double, private val c: Double) : Фігура() {
    override fun обчислитиПлощу(): Double {
        // Використовуємо формулу Герона для обчислення площі трикутника
        val s = (a + b + c) / 2
        return Math.sqrt(s * (s - a) * (s - b) * (s - c))
    }

    override fun обчислитиПериметр(): Double {
        return a + b + c
    }
}

// Приклад використання
fun main() {
    val прямокутник = Прямокутник(5.0, 3.0)
    println("Площа прямокутника: ${прямокутник.обчислитиПлощу()}")
    println("Периметр прямокутника: ${прямокутник.обчислитиПериметр()}")

    val коло = Коло(4.0)
    println("Площа кола: ${коло.обчислитиПлощу()}")
    println("Периметр кола: ${коло.обчислитиПериметр()}")

    val трикутник = Трикутник(3.0, 4.0, 5.0)
    println("Площа трикутника: ${трикутник.обчислитиПлощу()}")
    println("Периметр трикутника: ${трикутник.обчислитиПериметр()}")
}
